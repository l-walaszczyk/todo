{"version":3,"sources":["components/TodoRow.js","components/TableHead.js","components/TableFoot.js","hooks/useSortableTodos.js","hooks/usePagination.js","components/Table.js","hooks/useForm.js","components/Form.js","App.js","index.js"],"names":["TodoRow","index","todo","taskName","taskPriority","taskDone","initialIndex","setTodos","activeRow","setActiveRow","className","onFocus","onMouseEnter","onTouchStart","onMouseLeave","type","checked","onChange","event","prevTodos","newTodos","target","onClick","splice","icon","faTrashAlt","TableHead","requestSort","getClassNamesFor","colSpan","TableFoot","rowsPerPage","startIndex","endIndex","handleChangeRowsPerPage","handleNext","handlePrev","todosLength","htmlFor","id","value","disabled","faChevronLeft","faChevronRight","useSortableTodos","todos","config","useState","sortConfig","setSortConfig","sortedTodos","useMemo","sortableTodos","map","sort","a","b","key","direction","usePagination","initialRowsPerPage","setRowsPerPage","setStartIndex","setEndIndex","useEffect","newRowsPerPage","parseInt","newStartIndexCandidate","newEndIndexCandidate","Table","length","todoRows","slice","name","undefined","is_object","is_required","isRequired","get_prop_values","stateSchema","prop","Object","keys","reduce","accumulator","curr","useForm","stateValidatorSchema","submitFormCallback","state","setStateSchema","values","setValues","errors","setErrors","dirty","setDirty","disable","setDisable","isDirty","setIsDirty","setInitialErrorState","validateErrorState","validateFormFields","useCallback","validator","field","error","required","fieldValidator","testFunc","prevState","some","handleOnChange","handleOnSubmit","preventDefault","Form","func","newTodo","onSubmit","placeholder","hidden","form","faPlusSquare","initialTodos","App","JSON","parse","localStorage","getItem","React","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe77fc83.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TodoRow = ({\n  index,\n  todo: { taskName, taskPriority, taskDone, initialIndex },\n  setTodos,\n  activeRow,\n  setActiveRow,\n}) => {\n  const handleDelete = () => {\n    setTodos((prevTodos) => {\n      const newTodos = [...prevTodos];\n      newTodos.splice(initialIndex, 1);\n      return newTodos;\n    });\n    setActiveRow(null);\n  };\n\n  const handleChecked = (event) => {\n    setTodos((prevTodos) => {\n      const newTodos = [...prevTodos];\n      newTodos[initialIndex].taskDone = event.target.checked;\n      return newTodos;\n    });\n    setActiveRow(null);\n  };\n\n  return (\n    <tr\n      className={index === activeRow ? \"active\" : \"inactive\"}\n      onFocus={() => setActiveRow(index)}\n      onMouseEnter={() => setActiveRow(index)}\n      onTouchStart={() => setActiveRow(index)}\n      onMouseLeave={() => setActiveRow(null)}\n    >\n      <td>{taskName}</td>\n      <td>{[\"Low\", \"Medium\", \"High\"][taskPriority]}</td>\n      <td>\n        <label className=\"checkbox-container\">\n          <input\n            type=\"checkbox\"\n            checked={taskDone || false}\n            onChange={handleChecked}\n          />\n          <span className=\"checkmark\"></span>\n        </label>\n      </td>\n      <td>\n        <button type=\"button\" onClick={handleDelete}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default TodoRow;\n","import React from \"react\";\n\nconst TableHead = ({ requestSort, getClassNamesFor }) => {\n  return (\n    <tr>\n      <th>\n        <button\n          type=\"button\"\n          onClick={() => requestSort(\"taskName\")}\n          className={getClassNamesFor(\"taskName\")}\n        >\n          Task name\n        </button>\n      </th>\n      <th>\n        <button\n          type=\"button\"\n          onClick={() => requestSort(\"taskPriority\")}\n          className={getClassNamesFor(\"taskPriority\")}\n        >\n          Priority\n        </button>\n      </th>\n      <th colSpan=\"2\">\n        <button\n          type=\"button\"\n          onClick={() => requestSort(\"taskDone\")}\n          className={getClassNamesFor(\"taskDone\")}\n        >\n          Done\n        </button>\n      </th>\n    </tr>\n  );\n};\n\nexport default TableHead;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TableFoot = ({\n  rowsPerPage,\n  startIndex,\n  endIndex,\n  handleChangeRowsPerPage,\n  handleNext,\n  handlePrev,\n  todosLength,\n}) => {\n  return (\n    <tr>\n      <td colSpan=\"4\">\n        <div className=\"table-footer\">\n          <div className=\"rows-per-page-container\">\n            <label htmlFor=\"rows-per-page\">Rows per page:</label>\n            <select\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handleChangeRowsPerPage}\n            >\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"15\">15</option>\n            </select>\n          </div>\n          <p className=\"rows-out-of\">{`${\n            todosLength === 0 ? 0 : startIndex + 1\n          } - ${endIndex} of ${todosLength}`}</p>\n          <div className=\"page-nav\">\n            <button\n              disabled={startIndex === 0}\n              type=\"button\"\n              onClick={handlePrev}\n            >\n              <FontAwesomeIcon icon={faChevronLeft} />\n            </button>\n            <button\n              disabled={endIndex === todosLength}\n              type=\"button\"\n              onClick={handleNext}\n            >\n              <FontAwesomeIcon icon={faChevronRight} />\n            </button>\n          </div>\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default TableFoot;\n","import { useState, useMemo } from \"react\";\r\n\r\nconst useSortableTodos = (todos, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n\r\n  const sortedTodos = useMemo(() => {\r\n    let sortableTodos = todos.map((todo, index) => ({\r\n      ...todo,\r\n      initialIndex: index,\r\n    }));\r\n\r\n    if (sortConfig !== null) {\r\n      sortableTodos.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return sortableTodos;\r\n  }, [todos, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { sortedTodos, requestSort, sortConfig };\r\n};\r\n\r\nexport default useSortableTodos;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst usePagination = (todosLength, initialRowsPerPage) => {\r\n  const [rowsPerPage, setRowsPerPage] = useState(initialRowsPerPage);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(\r\n    todosLength < initialRowsPerPage ? todosLength : initialRowsPerPage\r\n  );\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    const newRowsPerPage = parseInt(event.target.value, 10);\r\n    const newStartIndexCandidate = startIndex + newRowsPerPage;\r\n    setEndIndex(\r\n      newStartIndexCandidate > todosLength\r\n        ? todosLength\r\n        : newStartIndexCandidate\r\n    );\r\n    setRowsPerPage(newRowsPerPage);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (endIndex < todosLength) {\r\n      setStartIndex(startIndex + rowsPerPage);\r\n      const newEndIndexCandidate = endIndex + rowsPerPage;\r\n      setEndIndex(\r\n        newEndIndexCandidate > todosLength ? todosLength : newEndIndexCandidate\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (startIndex > 0) {\r\n      if (startIndex < rowsPerPage) {\r\n        setStartIndex(0);\r\n        setEndIndex(rowsPerPage);\r\n      } else {\r\n        setEndIndex(startIndex);\r\n        setStartIndex(startIndex - rowsPerPage);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startIndex + 1 > todosLength) {\r\n      if (startIndex < rowsPerPage) {\r\n        setStartIndex(0);\r\n        setEndIndex(todosLength < rowsPerPage ? todosLength : rowsPerPage);\r\n      } else {\r\n        setEndIndex(startIndex);\r\n        setStartIndex(startIndex - rowsPerPage);\r\n      }\r\n    } else if (todosLength - (startIndex + 1) < rowsPerPage) {\r\n      setEndIndex(todosLength);\r\n    }\r\n  }, [startIndex, endIndex, rowsPerPage, todosLength]);\r\n\r\n  return {\r\n    rowsPerPage,\r\n    startIndex,\r\n    endIndex,\r\n    handleChangeRowsPerPage,\r\n    handleNext,\r\n    handlePrev,\r\n  };\r\n};\r\n\r\nexport default usePagination;\r\n","import React, { useState } from \"react\";\nimport TodoRow from \"./TodoRow\";\nimport TableHead from \"./TableHead\";\nimport TableFoot from \"./TableFoot\";\nimport useSortableTodos from \"../hooks/useSortableTodos\";\nimport usePagination from \"../hooks/usePagination\";\n\nconst Table = ({ todos, setTodos }) => {\n  const [activeRow, setActiveRow] = useState(null);\n\n  const { sortedTodos, requestSort, sortConfig } = useSortableTodos(todos);\n\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  const {\n    rowsPerPage,\n    startIndex,\n    endIndex,\n    handleChangeRowsPerPage,\n    handleNext,\n    handlePrev,\n  } = usePagination(todos.length, 5);\n\n  const paginatedSortedTodos = sortedTodos.slice(startIndex, endIndex);\n\n  const todoRows = paginatedSortedTodos.map((todo, index) => (\n    <TodoRow\n      key={index}\n      index={index}\n      todo={todo}\n      setTodos={setTodos}\n      activeRow={activeRow}\n      setActiveRow={setActiveRow}\n    />\n  ));\n\n  return (\n    <div className=\"table-wrapper\">\n      <table>\n        <thead>\n          <TableHead\n            requestSort={requestSort}\n            getClassNamesFor={getClassNamesFor}\n          />\n        </thead>\n        <tbody>{todoRows}</tbody>\n        <tfoot>\n          <TableFoot\n            rowsPerPage={rowsPerPage}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\n            handleNext={handleNext}\n            handlePrev={handlePrev}\n            todosLength={todos.length}\n          />\n        </tfoot>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst VALUE = \"value\";\r\nconst ERROR = \"error\";\r\nconst REQUIRED_FIELD_ERROR = \"This field is required\";\r\n\r\nfunction is_object(value) {\r\n  return typeof value === \"object\" && value !== null;\r\n}\r\n\r\nfunction is_required(value, isRequired) {\r\n  if (!value && isRequired) return REQUIRED_FIELD_ERROR;\r\n  return \"\";\r\n}\r\n\r\nfunction get_prop_values(stateSchema, prop) {\r\n  return Object.keys(stateSchema).reduce((accumulator, curr) => {\r\n    accumulator[curr] = !prop ? false : stateSchema[curr][prop];\r\n\r\n    return accumulator;\r\n  }, {});\r\n}\r\n\r\nfunction useForm(\r\n  stateSchema = {},\r\n  stateValidatorSchema = {},\r\n  submitFormCallback\r\n) {\r\n  const [state, setStateSchema] = useState(stateSchema);\r\n\r\n  const [values, setValues] = useState(get_prop_values(state, VALUE));\r\n  const [errors, setErrors] = useState(get_prop_values(state, ERROR));\r\n  const [dirty, setDirty] = useState(get_prop_values(state));\r\n\r\n  const [disable, setDisable] = useState(true);\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  // Get a local copy of stateSchema\r\n  useEffect(() => {\r\n    setStateSchema(stateSchema);\r\n    setDisable(true); // Disable button in initial render.\r\n    setInitialErrorState();\r\n  }, []); // eslint-disable-line\r\n\r\n  // For every changed in our state this will be fired\r\n  // To be able to disable the button\r\n  useEffect(() => {\r\n    if (isDirty) {\r\n      setDisable(validateErrorState());\r\n    }\r\n  }, [errors, isDirty]); // eslint-disable-line\r\n\r\n  // Validate fields in forms\r\n  const validateFormFields = useCallback(\r\n    (name, value) => {\r\n      const validator = stateValidatorSchema;\r\n      // Making sure that stateValidatorSchema name is same in stateSchema\r\n      if (!validator[name]) return;\r\n\r\n      const field = validator[name];\r\n\r\n      let error = \"\";\r\n      error = is_required(value, field.required);\r\n\r\n      if (is_object(field[\"validator\"]) && error === \"\") {\r\n        const fieldValidator = field[\"validator\"];\r\n\r\n        // Test the function callback if the value meets the criteria\r\n        const testFunc = fieldValidator[\"func\"];\r\n        if (!testFunc(value, values)) {\r\n          error = fieldValidator[\"error\"];\r\n        }\r\n      }\r\n\r\n      return error;\r\n    },\r\n    [stateValidatorSchema, values]\r\n  );\r\n\r\n  // Set Initial Error State\r\n  // On first render...\r\n  const setInitialErrorState = useCallback(() => {\r\n    Object.keys(errors).map((name) =>\r\n      setErrors((prevState) => ({\r\n        ...prevState,\r\n        [name]: validateFormFields(name, values[name]),\r\n      }))\r\n    );\r\n  }, [errors, values, validateFormFields]);\r\n\r\n  // Used to disable submit button if there's a value in errors\r\n  // or the required field in state has no value.\r\n  // Wrapped in useCallback to cached the function to avoid intensive memory leaked\r\n  // in every re-render in component\r\n  const validateErrorState = useCallback(\r\n    () => Object.values(errors).some((error) => error),\r\n    [errors]\r\n  );\r\n\r\n  // Event handler for handling changes in input.\r\n  const handleOnChange = useCallback(\r\n    (event) => {\r\n      setIsDirty(true);\r\n\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n\r\n      const error = validateFormFields(name, value);\r\n\r\n      setValues((prevState) => ({ ...prevState, [name]: value }));\r\n      setErrors((prevState) => ({ ...prevState, [name]: error }));\r\n      setDirty((prevState) => ({ ...prevState, [name]: true }));\r\n    },\r\n    [validateFormFields]\r\n  );\r\n\r\n  const handleOnSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      // Making sure that there's no error in the state\r\n      // before calling the submit callback function\r\n      if (!validateErrorState()) {\r\n        submitFormCallback(values);\r\n        setValues(get_prop_values(state, VALUE));\r\n        setErrors(get_prop_values(state, ERROR));\r\n        setDirty(get_prop_values(state));\r\n        setIsDirty(false);\r\n        setDisable(true);\r\n        setInitialErrorState();\r\n      }\r\n    },\r\n    [\r\n      validateErrorState,\r\n      submitFormCallback,\r\n      values,\r\n      state,\r\n      setInitialErrorState,\r\n    ]\r\n  );\r\n\r\n  return {\r\n    handleOnChange,\r\n    handleOnSubmit,\r\n    values,\r\n    errors,\r\n    disable,\r\n    setValues,\r\n    setErrors,\r\n    dirty,\r\n  };\r\n}\r\n\r\nexport default useForm;\r\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport useForm from \"../hooks/useForm.js\";\n\nconst Form = ({ setTodos }) => {\n  const stateSchema = {\n    taskName: { value: \"\", error: \"\" },\n    taskPriority: { value: \"\", error: \"\" },\n  };\n\n  const stateValidatorSchema = {\n    taskName: {\n      required: true,\n      validator: {\n        func: (value) => value.length <= 40,\n        error: \"Task name too long\",\n      },\n    },\n    taskPriority: {\n      required: false,\n    },\n  };\n\n  function onSubmitForm(newTodo) {\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n  }\n\n  const {\n    values: { taskName, taskPriority },\n    errors,\n    dirty,\n    handleOnChange,\n    handleOnSubmit,\n    disable,\n  } = useForm(stateSchema, stateValidatorSchema, onSubmitForm);\n\n  return (\n    <div className=\"form-wrapper\">\n      <form id=\"add-task\" onSubmit={handleOnSubmit}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"taskName\"\n            placeholder=\"Enter new task\"\n            required\n            value={taskName}\n            onChange={handleOnChange}\n          />\n          {errors.taskName && dirty.taskName && (\n            <p className=\"error\">{errors.taskName}</p>\n          )}\n        </div>\n        <div className=\"select-container\">\n          <select\n            name=\"taskPriority\"\n            value={taskPriority}\n            onChange={handleOnChange}\n          >\n            <option value=\"\" disabled hidden>\n              Set priority\n            </option>\n            <option value=\"0\">Low</option>\n            <option value=\"1\">Medium</option>\n            <option value=\"2\">High</option>\n          </select>\n          {errors.taskPriority && dirty.taskPriority && (\n            <p className=\"error\">{errors.taskPriority}</p>\n          )}\n        </div>\n        <button form=\"add-task\" type=\"submit\" disabled={disable}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport Table from \"./components/Table\";\nimport Form from \"./components/Form\";\nimport \"./App.scss\";\n\nconst initialTodos = [\n  { taskName: \"01\", taskPriority: 1, taskDone: false },\n  { taskName: \"02\", taskPriority: 1, taskDone: false },\n  { taskName: \"03\", taskPriority: 1, taskDone: false },\n  { taskName: \"04\", taskPriority: 1, taskDone: false },\n  { taskName: \"05\", taskPriority: 1, taskDone: false },\n  { taskName: \"06\", taskPriority: 1, taskDone: false },\n  { taskName: \"07\", taskPriority: 1, taskDone: false },\n  { taskName: \"08\", taskPriority: 1, taskDone: false },\n  { taskName: \"09\", taskPriority: 1, taskDone: false },\n  { taskName: \"10\", taskPriority: 1, taskDone: false },\n  { taskName: \"11\", taskPriority: 1, taskDone: false },\n  { taskName: \"12\", taskPriority: 1, taskDone: false },\n  { taskName: \"13\", taskPriority: 1, taskDone: false },\n  { taskName: \"14\", taskPriority: 1, taskDone: false },\n  { taskName: \"15\", taskPriority: 1, taskDone: false },\n  { taskName: \"16\", taskPriority: 1, taskDone: false },\n  { taskName: \"17\", taskPriority: 1, taskDone: false },\n  { taskName: \"18\", taskPriority: 1, taskDone: false },\n  { taskName: \"19\", taskPriority: 1, taskDone: false },\n  { taskName: \"20\", taskPriority: 1, taskDone: false },\n];\n\n// const initialTodos = [\n//   { taskName: \"Take out the trash\", taskPriority: 1, taskDone: false },\n//   { taskName: \"Feed the dog\", taskPriority: 2, taskDone: true },\n//   { taskName: \"Order lunch\", taskPriority: 2, taskDone: false },\n//   { taskName: \"Send email to Peter\", taskPriority: 0, taskDone: true },\n//   { taskName: \"Buy groceries\", taskPriority: 1, taskDone: false },\n// ];\n\nconst App = () => {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || initialTodos\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"container\">\n      <Form todos={todos} setTodos={setTodos} />\n      <Table todos={todos} setTodos={setTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}